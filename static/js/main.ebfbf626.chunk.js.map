{"version":3,"sources":["index.js"],"names":["App","useState","activePanel","setActivePanel","history","setHistory","donateImgUrl","donateIsRegular","donateName","donateSum","donateGoal","donateAbout","donatePay","donateAuthor","donateOver","donateDate","data","setData","updateData","name","value","newData","console","log","goBack","story","pop","length","goForward","push","activeView","id","style","margin","stretched","action","size","onClick","whiteSpace","left","textAlign","before","color","header","subheader","asideMode","background","border","backgroundSize","padding","type","mode","width","height","top","onChange","e","target","placeholder","display","vertical","marginBottom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebfbf626.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Root, Search, Avatar, View, Panel, PanelHeader, ConfigProvider, Header, Group, Cell,\n  FixedLayout, Div, Button, Placeholder, Banner, Title, Input, FormLayout, Textarea,\n  Select, FormLayoutGroup, Radio, Separator\n} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport PanelHeaderBack from '@vkontakte/icons/dist/24/browser_back';\nimport Icon28TargetOutline from '@vkontakte/icons/dist/28/target_outline';\nimport Icon28CalendarOutline from '@vkontakte/icons/dist/28/calendar_outline';\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\n\n\nfunction App() {\n  let [activePanel, setActivePanel] = useState('main');\n  let [history, setHistory] = useState(['main']);\n  let [data, setData] = useState({\n    donateImgUrl: false,\n    donateIsRegular: false,\n    donateName: \"Например - помощники рядом\",\n    donateSum: \"Сколько нужно собрать?\",\n    donateGoal: \"Например, лечение человека\",\n    donateAbout: \"На что пойдут деньги и как они кому-то помогут?\",\n    donatePay: '',\n    donateAuthor: '',\n    donateOver: '',\n    donateDate: ''\n  })\n\n  const updateData = (name, value) => {\n    let newData = {...data}\n    newData[name] = value\n    setData(newData)\n    console.log('Update. Name: ', name, \" Value \", value)\n  }\n\n  const goBack = () => {\n    const story = [...history];\n    story.pop();\n    const activePanel = story[story.length - 1];\n    setHistory(story);\n    setActivePanel(activePanel);\n  }\n\n  const goForward = (activePanel) => {\n    const story = [...history];\n    story.push(activePanel);\n    setHistory(story);\n    setActivePanel(activePanel);\n  }\n\n  return (\n      <Root activeView=\"main\">\n        <View id=\"main\" activePanel={activePanel}>\n          {/*DONATE MAIN*/}\n          <Panel id=\"main\">\n            <PanelHeader><Div style={{margin: '0 auto'}}>Пожертвования</Div></PanelHeader>\n            <Placeholder stretched action={\n              <Button size=\"l\" onClick={() => {\n                goForward('typeOfDonate')\n              }\n              }>Создать сбор</Button>\n            }>\n              <Div style={{whiteSpace: 'pre-line'}}>\n                {'У Вас пока нет сборов. \\n Начните доброе дело.'}</Div>\n            </Placeholder>\n          </Panel>\n          {/*TYPE OF DONATE*/}\n          <Panel id=\"typeOfDonate\">\n            <PanelHeader left={<PanelHeaderBack onClick={goBack}/>}>\n              <Div style={{margin: '0 auto'}}>Тип сбора</Div></PanelHeader>\n            <Placeholder stretched action={\n              <Group>\n                <Banner style={{textAlign: \"initial\"}}\n                        before={<Icon28TargetOutline style={{color: \"#3F8AE0\"}}/>}\n                        header=\"Целевой сбор\"\n                        subheader=\"Когда есть определенная цель\"\n                        asideMode=\"expand\"\n                        onClick={() => {\n                          updateData('donateIsRegular', false)\n                          goForward('targetDonate')\n                        }}\n                />\n                <Banner style={{textAlign: \"initial\"}}\n                        before={<Icon28CalendarOutline style={{color: \"#3F8AE0\"}}/>}\n                        header=\"Регулярный сбор\"\n                        subheader=\"Если помощь нужна ежемесячно\"\n                        asideMode=\"expand\"\n                        onClick={() => {\n                          updateData('donateIsRegular', true)\n                          goForward('targetRegular')\n                        }}\n                />\n              </Group>\n            }>\n            </Placeholder>\n          </Panel>\n          {/*TARGET DONATE*/}\n          <Panel id=\"targetDonate\">\n            <PanelHeader left={<PanelHeaderBack onClick={goBack}/>}>\n              <Div style={{margin: '0 auto'}}>Целевой сбор</Div></PanelHeader>\n\n            <Group>\n              <Div>\n                <Button style={{\n                  background: (\n                      data['donateImgUrl']\n                          ? `url('https://steamuserimages-a.akamaihd.net/ugc/921424969101700488/946A7F3D86FB377DBF47B19D0716A332B78D1265/')`\n                          : 'rgba(0,0,0,0)'),\n                  border: '1px dashed #3F8AE0',\n                  backgroundSize: 'cover',\n                  padding: '56px'\n                }}\n                        stretched\n                        onClick={() => {\n                          updateData('donateImgUrl', './images/cat.jpg')\n                        }}\n                        type=\"file\"\n                        mode=\"secondary\" size=\"l\"\n                        before={<Icon56GalleryOutline width={28} height={28}\n                        />}>\n                  Загрузить обложку\n                </Button>\n              </Div>\n            </Group>\n\n            <Group>\n              <FormLayout>\n                <Input\n                    type=\"text\"\n                    top=\"Название сбора\"\n                    name=\"donateName\"\n                    value={data['donateName']}\n                    onChange={(e) => {\n                      updateData('donateName',\n                          e.target.value)\n                    }}\n                    // status={email ? 'valid' : 'error'}\n                    // bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n                />\n                <Input\n                    type=\"text\"\n                    top=\"Сумма, ₽\"\n                    name=\"donateSum\"\n                    value={data['donateSum']}\n                    onChange={(e) => {\n                      updateData('donateSum',\n                          e.target.value)\n                    }}\n                    // status={email ? 'valid' : 'error'}\n                    // bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n                />\n                <Input\n                    type=\"text\"\n                    top=\"Цель\"\n                    name=\"donateGoal\"\n                    value={data['donateGoal']}\n                    onChange={(e) => {\n                      updateData('donateGoal',\n                          e.target.value)\n                    }}\n                    // status={email ? 'valid' : 'error'}\n                    // bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n                />\n                <Textarea\n                    top=\"Описание\"\n                    name=\"email\"\n                    value={data['donateAbout']}\n                    onChange={(e) => {\n                      updateData('donateAbout',\n                          e.target.value)\n                    }}\n                    // onChange={this.onChange}\n                    // status={email ? 'valid' : 'error'}\n                    // bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n                />\n                <Select\n                    top=\"Куда получать деньги\"\n                    placeholder=\"Выберете счёт\"\n                    value={data['donatePay']}\n                    onChange={(e) => {\n                      updateData('donatePay',\n                          e.target.value)\n                    }}\n                >\n                  <option value=\"mainPay\">Счёт VK Pay · 1234</option>\n                  <option value=\"secondPay\">Счёт VK Pay · 2555</option>\n                </Select>\n\n                <Div style={{display: 'flex', padding: 0}}>\n                  <Button size=\"l\" stretched\n                          onClick={() => goForward('advanced')}\n                  >Далее</Button>\n                </Div>\n\n              </FormLayout>\n            </Group>\n\n          </Panel>\n          {/*TARGET REGULAR*/}\n          <Panel id=\"targetRegular\">\n            <PanelHeader left={<PanelHeaderBack onClick={goBack}/>}>\n              <Div style={{margin: '0 auto'}}>Регулярный сбор</Div></PanelHeader>\n            <Group>\n              <Div>\n                <Button style={{\n                  background: (\n                      data['donateImgUrl']\n                          ? `url('https://steamuserimages-a.akamaihd.net/ugc/921424969101700488/946A7F3D86FB377DBF47B19D0716A332B78D1265/')`\n                          : 'rgba(0,0,0,0)'),\n                  border: '1px dashed #3F8AE0',\n                  backgroundSize: 'cover',\n                  padding: '56px'\n                }}\n                        stretched\n                        onClick={() => {\n                          updateData('donateImgUrl', './images/cat.jpg')\n                        }}\n                        type=\"file\"\n                        mode=\"secondary\" size=\"l\"\n                        before={<Icon56GalleryOutline width={28} height={28}\n                        />}>\n                  Загрузить обложку\n                </Button>\n              </Div>\n            </Group>\n            <Group>\n              <FormLayout>\n                <Input\n                    type=\"text\"\n                    top=\"Название сбора\"\n                    name=\"donateName\"\n                    value={data['donateName']}\n                    onChange={(e) => {\n                      updateData('donateName',\n                          e.target.value)\n                    }}\n                    // status={email ? 'valid' : 'error'}\n                    // bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n                />\n                <Input\n                    type=\"text\"\n                    top=\"Сумма, ₽\"\n                    name=\"donateSum\"\n                    value={data['donateSum']}\n                    onChange={(e) => {\n                      updateData('donateSum',\n                          e.target.value)\n                    }}\n                    // status={email ? 'valid' : 'error'}\n                    // bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n                />\n                <Input\n                    type=\"text\"\n                    top=\"Цель\"\n                    name=\"donateGoal\"\n                    value={data['donateGoal']}\n                    onChange={(e) => {\n                      updateData('donateGoal',\n                          e.target.value)\n                    }}\n                    // status={email ? 'valid' : 'error'}\n                    // bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n                />\n                <Textarea\n                    top=\"Описание\"\n                    name=\"email\"\n                    value={data['donateAbout']}\n                    onChange={(e) => {\n                      updateData('donateAbout',\n                          e.target.value)\n                    }}\n                    // onChange={this.onChange}\n                    // status={email ? 'valid' : 'error'}\n                    // bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n                />\n                <Select\n                    top=\"Куда получать деньги\"\n                    placeholder=\"Выберете счёт\"\n                    value={data['donatePay']}\n                    onChange={(e) => {\n                      updateData('donatePay',\n                          e.target.value)\n                    }}\n                >\n                  <option value=\"mainPay\">Счёт VK Pay · 1234</option>\n                  <option value=\"secondPay\">Счёт VK Pay · 2555</option>\n                </Select>\n\n                <Div style={{display: 'flex', padding: 0}}>\n                  <Button size=\"l\" stretched>Далее</Button>\n                </Div>\n\n              </FormLayout>\n            </Group>\n\n          </Panel>\n          {/*ADVANCED*/}\n          <Panel id=\"advanced\">\n            <PanelHeader left={<PanelHeaderBack onClick={goBack}/>}>\n              <Div style={{margin: '0 auto'}}>Дополнительно</Div></PanelHeader>\n            <FormLayout>\n\n              <Select\n                  top=\"Автор\"\n                  value={data['donateAuthor']}\n                  onChange={(e) => {\n                    updateData('donateAuthor',\n                        e.target.value)\n                  }}\n              >\n                <option value=\"idXXX\">Станислав Малышев</option>\n                <option value=\"idYYY\">Евгений Преображенов</option>\n              </Select>\n\n              <FormLayoutGroup\n                  top=\"Сбор завершится\"\n                  value={data['donateOver']}\n                  onChange={(e) => {\n                    updateData('donateOver',\n                        e.target.value)\n                  }}\n              >\n                <Radio name=\"type\" value=\"1\">Когда соберём сумму</Radio>\n                <Radio name=\"type\" value=\"2\">В определённую дату</Radio>\n              </FormLayoutGroup>\n\n              <Input\n                  type=\"date\"\n                  top=\"Дата окончания\"\n                  value={data['donateDate']}\n                  onChange={(e) => {\n                    updateData('donateDate',\n                        e.target.value)\n                  }}\n              />\n\n              <FixedLayout vertical=\"bottom\">\n                <Div style={{display: 'flex', padding: 0, marginBottom: 20}}>\n                  <Button size=\"l\" stretched>Создать сбор</Button>\n                </Div>\n              </FixedLayout>\n\n            </FormLayout>\n          </Panel>\n        </View>\n      </Root>\n  );\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}